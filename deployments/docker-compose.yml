services:
  server:
    restart: always
    build:
      context: ..
      dockerfile: ./deployments/Dockerfile
    image: myapp.latest
    ports:
      - 8080:8080
    depends_on:
      - postgres
      - redis
    networks:
      - mynetwork
    env_file:
      - ../.env.production

  migrations:
    build:
      context: ..
      dockerfile: ./migrations/Dockerfile
    depends_on:
      - postgres
    networks:
      - mynetwork
    env_file:
      - ../.env.production
    environment:
      ENV: production

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      PGDATA: /data/postgres
      POSTGRES_DB: test_constructor
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/data/postgres
    networks:
      - mynetwork

  prometheus:
    container_name: prometheus-service
    image: prom/prometheus:v2.44.0
    restart: always
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - --config.file=/prometheus.yml
    volumes:
      - ./prometheus.yml:/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mynetwork

  grafana:
    container_name: grafana-service
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - mynetwork

  redis:
    container_name: redis-service
    image: redis
    ports:
      - "6379:6379"
    networks:
      - mynetwork


networks:
  mynetwork:
    driver: bridge
